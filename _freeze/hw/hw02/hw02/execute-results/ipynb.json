{
  "hash": "7d69323be014cfe2303745e2f4cf51a3",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: \"BEE 4750 Homework 2: Systems Modeling and Simulation\"\ndate: last-modified\nformat:\n    html:        \n        warning: true\n        error: true\n    ipynb:\n        warning: true\n        error: true\n        code-annotation: below\n    pdf:\n        include-in-header: \n           text: |\n            \\usepackage{fvextra}\n            \\DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\\\\{\\}}\n            \\DefineVerbatimEnvironment{OutputCode}{Verbatim}{breaklines,commandchars=\\\\\\{\\}}\nexecute: \n    echo: true\nengine: julia\njulia:\n    exeflags: [\"+1.10.4\"]\nformat-links: [pdf, ipynb]\n---\n\n::: {.content-visible when-format=\"ipynb\"}\n**Name**:\n\n**ID**:\n:::\n\n::: {.callout-important icon=false}\n### Due Date\n\nThursday, 09/19/24, 9:00pm\n:::\n\n::: {.content-visible when-format=\"html\"}\n\n:::{.callout-caution}\n\nIf you are enrolled in the course, make sure that you use the GitHub Classroom link provided in Ed Discussion, or you may not be able to get help if you run into problems.\n\nOtherwise, you can [find the Github repository here]({{< var github_org.repo >}}/hw02).\n\n:::\n\n:::\n\n## Overview\n\n### Instructions\n\n* Problem 1 asks you to derive a model for water quality in a river system and use this model to check for regulatory compliance.\n* Problem 2 asks you to explore the dynamics and equilibrium stability of the shallow lake model under a particular set of parameter values.\n* Problem 3 (5750 only) asks you to modify the lake eutrophication example from Lecture 04 to account for atmospheric deposition.\n\n### Load Environment\n\nThe following code loads the environment and makes sure all needed packages are installed. This should be at the start of most Julia scripts.\n\n::: {#2 .cell execution_count=1}\n``` {.julia .cell-code}\nimport Pkg\nPkg.activate(@__DIR__)\nPkg.instantiate()\n```\n:::\n\n\n\n::: {#4 .cell execution_count=1}\n``` {.julia .cell-code}\nusing Plots\nusing LaTeXStrings\nusing CSV\nusing DataFrames\nusing Roots\n```\n:::\n\n\n\n## Problems (Total: 50/60 Points)\n\n::: {.cell .markdown}\n\n### Problem 1 (25 points)\n\nA river which flows at 10 km/d is receiving discharges of wastewater contaminated with CRUD from two sources which are 15 km apart, as shown in the Figure below.  CRUD decays exponentially in the river at a rate of 0.36 $\\mathrm{d}^{-1}$. \n:::\n\n![Schematic of the river system in Problem 1](figures/river_diagram.png)\n\n::: {.cell .markdown}\n**In this problem**:\n\n* Assuming steady-state conditions, derive a model for the concentration of CRUD downriver by solving the appropriate differential equation(s) analytically.\n* Determine if the system in compliance with a regulatory limit of 2.5 kg/(1000 m$^3$).\n:::\n\n::: {.callout-tip}\nFormulate your model in terms of distance downriver, rather than leaving it in terms of time from discharge.\n:::\n\n### Problem 2 (25 points)\n\nConsider the shallow lake model from class:\n\n$$\n\\begin{aligned}\nX_{t+1} &= X_t + a_t + y_t + \\frac{X_t^q}{1 + X_t^q} - bX_t, \\\\\ny_t &\\sim \\text{LogNormal}(\\mu, \\sigma^2),\n\\end{aligned}\n$$\n\nwhere:\n\n* $X_t$ is the lake phosphorous (P) concentration at time $t$;\n* $a_t$ is the point-source P release at time $t$;\n* $y_t$ is the non-point-source P release at time $t$, which is treated as random from a LogNormal distribution with mean $\\mu$ and standard deviation $\\sigma$;\n* $b$ is the linear rate of P outflow;\n* $q$ is a parameter influencing the rate of P recycling from the sediment.\n\n\n**In this problem**:\n\n* Make an initial conditions plot for the model dynamics for $b=0.5$, $q=1.5$, $y_t=0$, and $a_t=0$ for $t=0, \\ldots, 30$. What are the equilibria? What can you say about the resilience of the system?\n  \n  ::: {.callout-tip}\n  ## Finding equilibria\n  \n  Use [`Roots.jl`](https://juliamath.github.io/Roots.jl/stable/) to find the equilibria by solving for values where $X_{t+1} = X_t$. For example, if you have functions `X_outflow(X,b)` and `X_recycling(X,q)`, you could create a function `X_delta(x, a) = a + X_recycling(x) - X_outflow(x)` and call `Roots.find_zero(x -> X_delta(x, a), x₀)`, where `x₀` is an initial value for the search (you might need to use your plot to find values for `x₀` near each of the \"true\" equilibria).\n\n  :::\n\n* Repeat the analysis with $a_t=0.02$ for all $t$. What are the new equilibria? How have the dynamics and resilience of the system changed?\n\n::: {.cell .markdown}\n### Problem 3 (10 points)\n\n**This problem is only required for students in BEE 5750**.\n\nConsider the lake eutrophication example from [Lecture 04](https://viveks.me/environmental-systems-analysis/slides/lecture03-1-eutrophication-modeling.html#/title-slide). Suppose that phosphorous is also atmospherically deposited onto the lake surface at a rate of $1.6 \\times 10^{-4} \\mathrm{kg/(yr} \\cdot \\mathrm{m}^2)$, which is then instantly mixed into the lake. Derive a model for the lake phosphorous concentration and find the maximum allowable point source phosphorous loading if the goal is to keep lake concentrations below 0.02 mg/L.\n\n:::\n\n::: {.cell .markdown}\n## References\n\nList any external references consulted, including classmates.\n:::\n\n---\njupyter:\n  kernelspec:\n    display_name: Julia\n    name: julia\n    language: julia\n  kernel_info:\n    name: julia\n  language_info:\n    name: julia\n    version: 1.10.4\n    codemirror_mode: julia\n---\n",
    "supporting": [
      "hw02_files/figure-ipynb"
    ],
    "filters": []
  }
}