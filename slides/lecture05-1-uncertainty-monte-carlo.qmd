---
title: "Uncertainty and Monte Carlo"
subtitle: "Lecture 08"
author: "Vivek Srikrishnan"
course: "BEE 4750"
institution: "Cornell University"
date: "September 23, 2024"
format:
    revealjs:
        slide-number: c/t
        show-slide-number: all
        center-title-slide: true
        width: 1280
        height: 720
        transition: none
        toc: true
        toc-depth: 1
        toc-title: "Overview"
        history: false
        link-external-newwindow: true
        theme: ../sass/slides.scss
        template-partials:
            - title-slide.html
        menu:
            numbers: true
        html-math-method: mathjax
        include-in-header: mathjax-config.html
        date-format: long
        email-obfuscation: javascript
        chalkboard:
            theme: whiteboard
            buttons: true
        auto-stretch: false
        controls: true
engine: julia
julia:
    exeflags: ["+1.10.4"]
execute:
    freeze: auto
    daemon: 600
---

```{julia}
#| output: false
import Pkg
Pkg.activate(@__DIR__)
Pkg.instantiate()
```

```{julia}
#| output: false
using Random
using CSV
using DataFrames
using Plots
using Measures
using Distributions
using StatsPlots
using LaTeXStrings
using Animations
using Logging

Random.seed!(1)
plot_font = "Computer Modern"
default(
    fontfamily=plot_font,
    linewidth=2, 
    framestyle=:box, 
    label=nothing, 
    grid=false
)
```

# Review of Last Classes

## Simulation

- "Mimic" data generation given a certain model for the relevant processes;
- Often requires some type of discretization (not always!)

## Simulation Workflow

![Simulation Workflow](figures/simulation_workflow.svg){width=90%}

## Simulation

- "Mimic" data generation given a certain model for the relevant processes;
- Often requires some type of discretization (not always!)
- More complex approaches (*e.g.* discrete-event simulation) for specific use cases.

## What We Haven't Discussed

- **Calibration**: How do we select parameter values?
- **Validation**: Does the model adequately reproduce the system dynamics?


## Dissolved Oxygen

- Dissolved oxygen (DO) is essential for water quality and aquatic life.
- Commonly regulated to keep DO above a minimum threshold.
- DO impacted by a number of factors, notably organic waste decomposition and nitrification.
- "Sag Curve": DO reduced near a discharge until waste decomposition reduces OD and re-aeration can occur.

## Questions?

{{< include _poll-prompt.qmd >}}

# Uncertainty and Systems Analysis

## Systems and Uncertainty

:::: {.columns}
::: {.column width=50%}
- *Deterministic models*: uncertainty due to the separation between the "internals" of the system and the "external" environment.
- *Stochastic models*: additional uncertainty from internal stochasticity
:::

::: {.column width=50%}
![Conceptual Schematic of a Systems Model](figures/system-conceptual.svg)
:::
::::

## What is Uncertainty?

::: {.fragment .fade-in}
**Glib Answer**: *A lack of certainty!*
:::

::: {.fragment .fade-in}
**More Seriously**: Uncertainty refers to an inability to exactly describe current or future values or states.
:::

## Types of Uncertainty

Two (broad) types of uncertainties:

- **Aleatory** uncertainty, or uncertainties resulting from randomness;
- **Epistemic** uncertainty, or uncertainties resulting from lack of knowledge. 


# Risk

## Systems and Risk

Designing and managing environmental systems is often about **minimizing or managing risk**:

- Maintaining clean air/water;
- Power grid reliabiliy standards;
- Flooding/other hazards;
- Climate change mitigation/adaptation.

## What is Risk?

The [*Society for Risk Analysis* definition](https://www.sra.org/wp-content/uploads/2020/04/SRA-Glossary-FINAL.pdf): 

::: {.quote}

> "risk" involves uncertainty about the effects/implications of an activity with respect to something that humans value (such as health, well-being, wealth, property or the environment), often focusing on negative, undesirable consequences.

:::

## So What is Risk?

**Important**: "Risk" is not just another words for probability, but:

- Involves uncertainty;
- Undesireable outcomes;
- Effects matter, not just the events themselves.

## Components of Risk

::: {.columns}
::: {.column width=50%}
Multiple components which contribute to risk:

- Probability of a **hazard**;
- **Exposure** to that hazard;
- **Vulnerability** to outcomes;
- Socioeconomic **responses**.
:::

::: {.column width=50%}
![Overview of the Components of Risk](figures/simpson_risk.svg)

::: {.caption}
Source: [Simpson et al (2021)](https://doi.org/10.1016/j.oneear.2021.03.005)
:::
:::
::::

## Systems and Risk Management

Risk management is often a key consideration in systems analysis. For example, consider regulatory standards.

- Often a tradeoff between strictness of a regulation and costs of compliance.
- Systems modeling is a key way to understand 
    - the impacts of changing a regulation
    - the probability of failure to meet standards.
  
# Probability

## Two Definitions of Probability

We often represent uncertainties with *probabilities*. What is a probability?

1. Long-run frequency of an event (**frequentist**)
2. Degree of belief that a proposition is true (**Bayesian**)

## Conditional Probabilities

We often don't want to just know if a particular event $A$ has a certain probability, but also how other events (call them $B$) might depend on that outcome.

**In other words:**

We want the *conditional probability* of $B$ given $A$, denoted $\mathbb{P}(B|A)$.

## Conditional Probabilities

We can write conditional probabilities in terms of unconditional probabilities:

$$\mathbb{P}(B|A) = \frac{\mathbb{P}(BA)}{\mathbb{P}(A)}.$$

## Bayes' Theorem

Conditional probabilities can be inverted according to **Bayes' Theorem**:

$$\mathbb{P}(A|B) = \frac{\mathbb{P}(B|A) \times \mathbb{P}(A)}{\mathbb{B}}.$$

## Probability Distributions

The probability of possible values of an unknown quantity are often represented as a probability distribution.

Probability distributions associate a probability to every event under consideration (the *event space*) and have to follow certain rules (for example, total probability = 1).

## Selecting a Distribution

:::: {.columns}
::: {.column width=35%}
The specification of distributions can *strongly* influence the analysis. 
:::
::: {.column width=65%}
![Probabilistic interactions between sea-levels and exposure](figures/Risk_Interactions.jpg){width=90%}
:::
::::

## Selecting a Distribution

A distribution implicitly answers questions like:

- What is the most probable event? How much more likely is it than the others?
- Are larger or smaller events more, less, or equally probable?
- How probable are extreme events?
- Are different events correlated, or are they independent?

## Key Features of Probability Distributions

- Mean/Mode (what events are "typical")
- Skew (are larger or smaller events more or equally probable)
- Variance (how spread out is the distribution around the mode)
- Tail Probabilities (how probable are extreme events)

## Common Distributions

- Gaussian / Normal
- Lognormal
- Binomial
- Uniform / Discrete Uniform

## Probability Distribution Tails

:::: {.columns}
::: {.column width=50%}
The tails of distributions represent the probability of high-impact outcomes.

**Key consideration**: Small changes to these (low) probabilities can greatly influence risk.
:::

::: {.column width=50%}
```{julia}
x = range(-5, 10; length = 100)
plot(x, pdf.(Cauchy(), x), linewidth=3, linecolor = :red, linestyle = :dash, yaxis = false, yticks = false, grid = false, label = "Cauchy Distribution", size=(500, 400), guidefontsize=16, legendfontsize=14, tickfontsize=16)
plot!(x, pdf.(Normal(), x), linewidth=3, linecolor = :blue, label = "Normal Distribution")
plot!(x[x .> 1.75], pdf.(Cauchy(), x[x .> 1.75]), fillrange = pdf.(Normal(), x[x .> 1.75]), fillcolor = :red, fillalpha = 0.2, label = false, linecolor= false)
xlabel!("Value")
```
:::
::::

# Monte Carlo

## Stochastic Simulation

**Monte Carlo simulation**: Propagating random samples through a model to estimate a value (usually an expectation or a quantile).

```{dot}
//| fig-width: 100%
digraph G {
    graph [
        rankdir=LR
        layout=dot
    ]
    node [
        fontname = "IBM Plex Sans, sans-serif"
        fontsize=25
    ]
    edge [
        arrowsize=0.75
        labeldistance=3
        penwidth=3
        fontname = "IBM Plex Sans, sans-serif"
        fontsize=25
        style=dashed
        color="#b31b1b"
        fontcolor="#b31b1b"
    ]
    a [label="Probability\n Distribution"]
    b [label = "Random\n Samples"]
    c [label="Model"]
    d [label="Outputs"]

    a -> b [
        label="Sample"
    ]
    b -> c [
        label="Input"
    ]
    c -> d [
        label="Simulate"
    ]
}

```

## Goals of Monte Carlo

Monte Carlo is a broad method, which can be used to:

1. Obtain probability distributions of outputs;
2. Estimate deterministic quantities (***Monte Carlo estimation***).

## Monte Carlo Estimation

Monte Carlo estimation involves framing the quantity of interest as a summary statistic (such as an expected value).

## MC Example: Finding $\pi$

:::: {.columns}
::: {.column width=50%}
::: {.fragment .fade-in}
Finding $\pi$ by sampling random values from the unit square and computing the fraction in the unit circle. This is an example of **Monte Carlo integration**.

::: {.fragment .fade-in}
$$\frac{\text{Area of Circle}}{\text{Area of Square}} = \frac{\pi}{4}$$
:::
:::
:::
::: {.column width=50%}
:::{.fragment .fade-in}
```{julia}
#| echo: false
#| fig-height: 100%
#| label: fig-mc-circle
#| fig-cap: "Monte Carlo simualtion for Estimating pi"

function circleShape(r)
    θ = LinRange(0, 2 * π, 500)
    r * sin.(θ), r * cos.(θ)
end

nsamp = 3000
unif = Uniform(-1, 1)
x = rand(unif, (nsamp, 2))
l = mapslices(v -> sum(v.^2), x, dims=2)
in_circ = l .< 1
pi_est = [4 * mean(in_circ[1:i]) for i in 1:nsamp]

plt1 = plot(
    1,
    xlim = (-1, 1),
    ylim = (-1, 1),
    legend = false,
    markersize = 4,
    framestyle = :origin,
    tickfontsize=16,
    grid=:false
    )
plt2 = plot(
    1,
    xlim = (1, nsamp),
    ylim = (3, 3.5),
    legend = :false,
    linewidth=3, 
    color=:black,
    tickfontsize=16,
    guidefontsize=16,
    xlabel="Iteration",
    ylabel="Estimate",
    right_margin=5mm
)
hline!(plt2, [π], color=:red, linestyle=:dash)
plt = plot(plt1, plt2, layout=grid(2, 1, heights=[2/3, 1/3]), size=(600, 600))

plot!(plt, circleShape(1), linecolor=:blue, lw=1, aspectratio=1, subplot=1)

Logging.disable_logging(Logging.Info)

mc_anim = @animate for i = 1:nsamp
    if l[i] < 1
        scatter!(plt[1], Tuple(x[i, :]), color=:blue, markershape=:x, subplot=1)
    else
        scatter!(plt[1], Tuple(x[i, :]), color=:red, markershape=:x, subplot=1)
    end
    push!(plt, 2, i, pi_est[i])
end every 100

gif(mc_anim, "figures/mc_pi.gif", fps=2)    

```
:::
:::
::::

## MC Example: Dice

:::: {.columns}
::: {.column width=50%}
What is the probability of rolling 4 dice for a total of 19?

::: {.fragment .fade-in}
Can simulate dice rolls and find the frequency of 19s among the samples.
:::
:::
::: {.column width=50%}

::: {.fragment .fade-in}
```{julia}
#| echo: false
#| fig-width: 100%
#| label: fig-mc-dice
#| fig-cap: "Monte Carlo simualtion for Dice Rolls"

function dice_roll_repeated(n_trials, n_dice)
    dice_dist = DiscreteUniform(1, 6) 
	roll_results = zeros(n_trials)
	for i=1:n_trials
		roll_results[i] = sum(rand(dice_dist, n_dice))
	end
	return roll_results
end

nsamp = 10000
# roll four dice 10000 times
rolls = dice_roll_repeated(nsamp, 4) 

# calculate probability of 19
sum(rolls .== 19) / length(rolls)

# initialize storage for frequencies by sample length
avg_freq = zeros(length(rolls)) 
# compute average frequencies of 19
avg_freq[1] = (rolls[1] == 19)
count = 1
for i=2:length(rolls)
    avg_freq[i] = (avg_freq[i-1] * (i-1) + (rolls[i] == 19)) / i
end

plt = plot(
    1,
    xlim = (1, nsamp),
    ylim = (0, 0.1),
    legend = :false,
    tickfontsize=16,
    guidefontsize=16,
    xlabel="Iteration",
    ylabel="Estimate",
    right_margin=8mm,
    color=:black,
    linewidth=3,
    size=(600, 400)
)
hline!(plt, [0.0432], color="red", 
    linestyle=:dash) 

mc_anim = @animate for i = 1:nsamp
    push!(plt, 1, i, avg_freq[i])
end every 100

gif(mc_anim, "figures/mc_dice.gif", fps=3)
```
:::
:::
::::

## Monte Carlo Estimation

This type of estimation can be repeated with any simulation model that has a stochastic component.

For example, consider our dissolved oxygen model. Suppose that we have a probability distribution for the inflow DO.

**How could we compute the probability of DO falling below the regulatory standard somewhere downstream?**

## Monte Carlo and Uncertainty Propagation

1. Draw samples from some distribution;
2. Eun them through one or more models;
3. Compute the (conditional) probability of outcomes of interest (for good or bad).


# Key Takeaways

## Key Takeaways

- Systems analysis features many uncertainties, which may be neglected with certain methods/model setups.
- Choice of probability distribution can have large impacts on uncertainty and risk estimates: **try not to use distributions just because they're convenient.**
- **Monte Carlo**: Estimate expected values of outcomes using simulation.


# Upcoming Schedule

## Next Classes

**Wednesday**: Monte Carlo Lab (clone before class, maybe instantiate environment too)

**Monday**: Why Does Monte Carlo Work?

## Assessments

**HW3**: Released today, due 10/03 at 9pm.


